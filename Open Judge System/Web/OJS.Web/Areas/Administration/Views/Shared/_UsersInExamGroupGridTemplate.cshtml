@using Resource = Resources.Areas.Administration.ExamGroups.Views.ExamGroupsIndex
@using GeneralResource = Resources.Areas.Administration.AdministrationGeneral

@{
    const string ControllerName = "ExamGroups";
}

@(Html.Kendo()
    .Window()
    .Name("BulkAddUsersPopUpWindow")
    .Title("Add Multiple users")
    .Draggable()
    .Resizable()
    .Width(600)
    .Visible(false)
    .Actions(actions => actions.Close())
)

<script type="text/x-kendo-template" id="_UsersInExamGroupGridTemplate">
    @(Html
        .Kendo()
        .Grid<OJS.Web.Areas.Administration.ViewModels.User.UserProfileSimpleAdministrationViewModel>()
        .Name("UsersInExamGroup_#=Id#")
        .Columns(columns =>
        {
            columns.Bound(m => m.Username);
            columns.Bound(m => m.FirstName);
            columns.Bound(m => m.LastName);
            columns.Bound(m => m.Email);
            columns.Command(command => command.Destroy().Text(" ")).Width(80).Title(GeneralResource.Remove);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create().Text(Resource.Add_user);
            toolbar.Custom().Text(Resource.Bulk_add_users).Url("javascript:OpenBulkAddUsersToExamGroupWindow(#=Id#)");
        })
        .Editable(editable =>
        {
            editable.Mode(GridEditMode.PopUp);
            editable.Window(w => w.Title(Resource.Add_user));
            editable.TemplateName("UsersComboBox");
            editable.DisplayDeleteConfirmation(Resource.Remove_user_prompt);
        })
        .Pageable(x => x.Refresh(true))
        .Sortable(x => x.Enabled(true).AllowUnsort(false))
        .Filterable(x => x.Enabled(true))
        .DataSource(data =>
        {
            data
                .Ajax()
                .ServerOperation(true)
                .Model(model => model.Id(m => m.UserId))
                .Sort(sort => sort.Add(field => field.Username))
                .Create(create => create.Action("AddUserToExamGroup", ControllerName, new { id = "#= Id #" }))
                .Read(read => read.Action("UsersInExamGroup", ControllerName, new { id = "#= Id #" }))
                .Destroy(destroy => destroy.Action("RemoveUserFromExamGroup", ControllerName, new { id = "#= Id #" }))
                .Events(ev => ev.Error("validateModelStateErrors"));
        })
        .Events(ev => ev.DataBound("onDetailDataBound"))
        .ToClientTemplate())
</script>