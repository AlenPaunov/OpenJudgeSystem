@using Resource = Resources.Areas.Administration.ProblemGroups.Views.ProblemGroupsIndex
@using GeneralResource = Resources.Areas.Administration.AdministrationGeneral

@{
    const string ControllerName = "ProblemGroups";

    ViewBag.Title = Resource.Page_title;
}

<div class="administration-container">
    <h1>@ViewBag.Title</h1>
    
    <div class="row bottom-buffer">
        <div class="col-md-6">
            @(Html.Partial("_ContestSearchCascadeFromCategoryPartial"))
        </div>

        <div class="col-md-6">
            @(Html.Partial("_ContestSearchPartial"))
        </div>
    </div>

    @(Html
        .Kendo()
        .Grid<OJS.Web.Areas.Administration.ViewModels.ProblemGroup.DetailedProblemGroupViewModel>()
        .Name("DataGrid")
        .Columns(columns =>
        {
            columns.Bound(m => m.OrderBy);
            columns.Bound(m => m.ContestName);
            columns.Bound(m => m.CategoryName);
            columns.Command(command => command.Edit().Text(" ").UpdateText(GeneralResource.Change).CancelText(GeneralResource.Cancel)).Width(80).Title(GeneralResource.Edit);
            columns.Command(command => command.Destroy().Text(" ")).Width(80).Title(GeneralResource.Delete);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create().Text(GeneralResource.Add);
            toolbar.Custom().Text(GeneralResource.Back_to_navigation).Action("Index", "Navigation", new { area = "Administration" }).Name("custom-toolbar-button");
        })
        .Editable(editable =>
        {
            editable.Mode(GridEditMode.PopUp);
            editable.Window(w =>w.Title(Resource.Page_title).Width(500));
            editable.DisplayDeleteConfirmation(GeneralResource.Delete_prompt);
        })
        .ColumnMenu()
        .Filterable(filter => filter.Enabled(true))
        .Pageable(pageable => pageable.Refresh(true).PageSizes(true))
        .DataSource(data =>
        {
            data
                .Ajax()
                .ServerOperation(true)
                .Model(model => model.Id(x => x.Id))
                .Create(create => create.Action("Create", ControllerName, new { contId = 20 }))
                .Read(read => read.Action("Read", ControllerName))
                .Update(update => update.Action("Update", ControllerName))
                .Destroy(destroy => destroy.Action("Destroy", ControllerName))
                .Events(ev => ev.Error("validateModelStateErrors"));
        })
        .Events(ev => ev.Edit("fillContestData"))
        .ClientDetailTemplateId("_ProblemsInProblemGroupGridTemplate")
    )
</div>

<script type="text/x-kendo-template" id="_ProblemsInProblemGroupGridTemplate">
    @(Html
        .Kendo()
        .Grid<OJS.Web.Areas.Administration.ViewModels.Problem.ProblemViewModel>()
        .Name("ProblemsInProblemGroup_#=Id#")
        .Columns(columns =>
        {
            columns.Bound(m => m.Id);
            columns.Bound(m => m.Name);
        })
        .ColumnMenu()
        .Filterable(filter => filter.Enabled(true))
        .Pageable(pageable => pageable.Enabled(true).PageSizes(true))
        .DataSource(data =>
        {
            data
                .Ajax()
                .ServerOperation(true)
                .Model(model => model.Id(x => x.Id))
                .Read(read => read.Action("ProblemsInProblemGroup", ControllerName, new {id = "#= Id #"}));
        })
        .ToClientTemplate()
    )
</script>  

<script type="text/javascript">
    $(function() {
        $("#DataGrid").hide();
    });

    function onSearchSelect(e) {
        clearDropDowns();
        var contestId = this.dataItem(e.item.index()).Id;
        filterByContest(contestId);
    }

    function onContestSelect() {
        clearSearch();
        var contestId = $('#contests').val();
        filterByContest(contestId);
    }

    function fillContestData() {
        $('.k-edit-form-container').css('width', '100%');
        $('.editor-label').css('width', '10%');
        $('.editor-field').css('width', '80%');

        var searchComboBox = $("#search").data("kendoComboBox");
        var contestsDropDown = $("#contests").data("kendoDropDownList");

        var contestId = searchComboBox.value() || contestsDropDown.value();
        var contestName = searchComboBox.text() || contestsDropDown.text();

        $('#ContestId').val(contestId).change();
        $('#ContestName').val(contestName).change();
    }

    function filterByContest(contestId) {
        var grid = $("#DataGrid");

        grid.data("kendoGrid").dataSource.filter({
            "field": "ContestId",
            "operator": "eq",
            "value": contestId
        });

        setTimeout(function() {
            grid.show();
        }, 150);
    }

    function clearSearch() {
        $('#search').data('kendoComboBox').value(null);
    }

    function clearDropDowns() {
        $("#categories").data('kendoDropDownList').value(null);
        $("#contests").data('kendoDropDownList').value(null);
    }
</script>