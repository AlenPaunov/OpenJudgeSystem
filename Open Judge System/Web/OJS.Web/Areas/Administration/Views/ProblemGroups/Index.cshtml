@using Resource = Resources.Areas.Administration.ProblemGroups.Views.ProblemGroupsIndex
@using GeneralResource = Resources.Areas.Administration.AdministrationGeneral
@using ViewModelResource = Resources.Areas.Administration.Problems.ViewModels.DetailedProblem

@{
    const string ControllerName = "ProblemGroups";

    ViewBag.Title = Resource.Page_title;
}

<div class="administration-container">
    <h1>@ViewBag.Title</h1>
    
    <div class="row bottom-buffer">
        <div class="col-md-6">
            @(Html.Partial("_ContestSearchCascadeFromCategoryPartial"))
        </div>

        <div class="col-md-6">
            @(Html.Partial("_ContestSearchPartial"))
        </div>
    </div>

    @(Html
        .Kendo()
        .Grid<OJS.Web.Areas.Administration.ViewModels.ProblemGroup.DetailedProblemGroupViewModel>()
        .Name("DataGrid")
        .Columns(columns =>
        {
            columns.Bound(m => m.OrderBy);
            columns.Template(@<text></text>).ClientTemplate("<a href='/Contests/#= ContestId #'>#= ContestName #</a>").Title(ViewModelResource.Contest);
            columns.Command(command => command.Edit().Text(" ").UpdateText(GeneralResource.Change).CancelText(GeneralResource.Cancel)).Width(80).Title(GeneralResource.Edit);
            columns.Command(command => command.Destroy().Text(" ")).Width(80).Title(GeneralResource.Delete);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create().Text(GeneralResource.Add);
            toolbar.Custom().Text(GeneralResource.Back_to_navigation).Action("Index", "Navigation", new { area = "Administration" }).Name("custom-toolbar-button");
        })
        .Editable(editable =>
        {
            editable.Mode(GridEditMode.PopUp);
            editable.Window(w =>w.Title(Resource.Page_title).Width(500));
            editable.DisplayDeleteConfirmation(GeneralResource.Delete_prompt);
        })
        .ColumnMenu()
        .Filterable(filter => filter.Enabled(true))
        .Pageable(pageable => pageable.Refresh(true).PageSizes(true))
        .DataSource(data =>
        {
            data
                .Ajax()
                .ServerOperation(true)
                .Model(model => model.Id(m => m.Id))
                .Sort(sort => sort.Add(field => field.OrderBy))
                .Create(create => create.Action("Create", ControllerName))
                .Read(read => read.Action("Read", ControllerName))
                .Update(update => update.Action("Update", ControllerName))
                .Destroy(destroy => destroy.Action("Destroy", ControllerName))
                .Events(ev => ev.Error("validateModelStateErrors"));
        })
        .Events(ev => ev.Edit("fillContestData"))
        .ClientDetailTemplateId("_ProblemsInProblemGroupGridTemplate"))
    
    @(Html.Partial("_ProblemsInProblemGroupGridTemplate"))
</div>

@section scripts{
    @Scripts.Render("~/bundles/problem-groups-index")
}