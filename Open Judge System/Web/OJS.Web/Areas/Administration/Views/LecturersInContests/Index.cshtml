@using OJS.Web.Areas.Administration.ViewModels.LecturersInContests
@{
    ViewBag.Title = "Лектори и състезания";

    const string ControllerName = "LecturersInContests";
    const string AreaName = "Administration";
}

<h1>@ViewBag.Title</h1>

@(Html.Kendo().Grid<LecturerInContestGridViewModel>()
    .Name("DataGrid")
    .Columns(columns =>
    {
        columns.Bound(m => m.UserName);
        columns.Bound(m => m.FirstName);
        columns.Bound(m => m.LastName);
        columns.Bound(m => m.Email);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("Обратно към администрацията").Action("Navigation", "Administration", new { Area = string.Empty }).Name("custom-toolbar-button");
        toolbar.Custom().Text("Експорт към Excel").Name("custom-toolbar-button").HtmlAttributes(new { id = "export" }).Url(Url.Action("ExportToExcel", ControllerName, new { page = 1, pageSize = "~", filter = "!!", sort = "~" }));
    })
    .ColumnMenu()
    .Events(e => e.DataBound("onDataBound"))
    .Pageable(x => x.Refresh(true))
    .Sortable(x => x.Enabled(true).AllowUnsort(false))
    .Filterable(x => x.Enabled(true))
    .Reorderable(x => x.Columns(true))
    .Resizable(x => x.Columns(true))
    .DataSource(datasource => datasource
        .Ajax()
        .ServerOperation(true)
        .Model(model => model.Id(m => m.UserId))
        .Sort(sort => sort.Add(x => x.UserName))
        .Read(read => read.Action("Read", ControllerName, new { area = AreaName }))
    )
            .ClientDetailTemplateId("lecturer-in-contest")
)

<script type="text/x-kendo-template" id="lecturer-in-contest">
    @(Html.Kendo().Grid<LecturerInContestShortViewModel>()
        .Name("DetailsGrid_#=UserId#")
        .Columns(columns =>
        {
            columns.Bound(col => col.ContestId);
            columns.Bound(col => col.ContestName);
            columns.Command(command => command.Edit().Text(" ")).Width(80);
            columns.Command(command => command.Destroy().Text(" ")).Width(80);
        })
        .ColumnMenu()
        .Pageable(x => x.Refresh(true))
        .ToolBar(tool => tool.Create().Text("Добави състезание"))
        .Events(ev => ev.Edit("onEdit"))
        .Editable(edit =>
        {
            edit.Mode(GridEditMode.PopUp);
            edit.Window(w => w.Title("Състезания на лектор"));
            edit.TemplateName("LecturerInContest");
            edit.DisplayDeleteConfirmation("Наистина ли искате да изтриете елемента?");
        })
        .DataSource(dataSource => dataSource
                .Ajax()
                ////.Events(ev => ev.Error("sulsControls.Validation.displayAllValidationMessagesForGrid"))
                .ServerOperation(true)
                .Model(model => model.Id(m => m.ContestId))
                .Sort(sort => sort.Add(m => m.ContestName))
                .Create(create => create.Action("AddContestToLecturer", ControllerName, new { area = AreaName, userId = "#=UserId#" }))
                .Read(read => read.Action("ReadContestsForLecturer", ControllerName, new { area = AreaName, lecturerId = "#=UserId#" }))
                .Update(update => update.Action("UpdateContestForLecturer", ControllerName, new { area = AreaName }))
                .Destroy(destroy => destroy.Action("DeleteContestForLecturer", ControllerName, new { area = AreaName }))
        )
        .ToClientTemplate()
    )
</script>

<script type="text/javascript">
    function onDataBound() {
        CreateExportToExcelButton();
    }

    function onEdit(ev) {
        if (!ev.model.isNew()) {
            $('#ContestId').data('kendoComboBox').enable(false);
        }
    }
</script>